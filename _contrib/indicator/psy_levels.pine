// Psy Levels
var int oneWeekMillis = (7 * 24 * 60 * 60 * 1000)

[psyHi, psyLo, psyHiLabel, psyLoLabel, psySessionStartTime] = trLib.calcPsyLevels(oneWeekMillis, showPsylevels, psyType, sydDST)

// Declare psyHiLine and psyLoLine outside the conditional block
var line psyHiLine = na
var line psyLoLine = na

// Draw Psy Level Lines
if (barstate.islast) and not showAllPsy and showPsylevels
    // Extend line back to the previous start time (after Psy-Hi/Lo have been calculated)
    psyHiLine := line.new(time, psyHi, psySessionStartTime, psyHi, xloc.bar_time, extend.none, psyColH)
    line.delete(psyHiLine[1])
    psyLoLine := line.new(time, psyLo, psySessionStartTime, psyLo, xloc.bar_time, extend.none, psyColL)
    line.delete(psyLoLine[1])

// Write Psy Level Labels - same label regardless if line.new or plot used
trLib.rLabelLastBar(psyHi, psyHiLabel, label.style_none, psyColH, showPsylabel, labelXOffset)
trLib.rLabelLastBar(psyLo, psyLoLabel, label.style_none, psyColL, showPsylabel, labelXOffset)

// Plot Historical Psy Level
plot(showPsy and showPsylevels and showAllPsy ? psyHi : na, color=psyColH, style=plot.style_stepline, linewidth=2, editable=false, title="Psy-Hi")
plot(showPsy and showPsylevels and showAllPsy ? psyLo : na, color=psyColL, style=plot.style_stepline, linewidth=2, editable=false, title="Psy-Lo")

alertcondition(ta.crossunder(close,psyHi) and not na(psyHi) and psyHi != 0 , "PA crossed under Psy Hi", "PA has crossed under the Psy Hi")
alertcondition(ta.crossover(close,psyHi) and not na(psyHi) and psyHi != 0  , "PA crossed over Psy Hi", "PA has crossed over the Psy Hi")
alertcondition(ta.crossunder(close,psyLo) and not na(psyLo) and psyLo != 0 , "PA crossed under Psy Lo", "PA has crossed under the Psy Lo")
alertcondition(ta.crossover(close,psyLo) and not na(psyLo) and psyLo != 0  , "PA crossed over Psy Lo", "PA has crossed over the Psy Lo")

// Detect Psychological Level Alignments
is_psy_level_w = low[1] == psyLo
is_psy_level_m = high[1] == psyHi